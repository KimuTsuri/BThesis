
#include "B4PrimaryGeneratorAction.hh"

#include "G4RunManager.hh"
#include "G4LogicalVolumeStore.hh"
#include "G4LogicalVolume.hh"
#include "G4Box.hh"
#include "G4Event.hh"
#include "G4ParticleGun.hh"
#include "G4ParticleTable.hh"
#include "G4ParticleDefinition.hh"
#include "G4SystemOfUnits.hh"
#include "Randomize.hh"

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......

B4PrimaryGeneratorAction::B4PrimaryGeneratorAction()
 : G4VUserPrimaryGeneratorAction(),
   fParticleGun(nullptr)
{
  G4int nofParticles = 1;
  fParticleGun = new G4ParticleGun(nofParticles);
}

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......

B4PrimaryGeneratorAction::~B4PrimaryGeneratorAction()
{
  delete fParticleGun;
}

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......

void B4PrimaryGeneratorAction::GeneratePrimaries(G4Event* anEvent)
{
  auto worldLV = G4LogicalVolumeStore::GetInstance()->GetVolume("World");

  G4Box* worldBox = nullptr;
  if (  worldLV ) {
    worldBox = dynamic_cast<G4Box*>(worldLV->GetSolid());
  }

  if ( worldBox ) {
    worldBox->GetZHalfLength();
  }
  else  {
    G4ExceptionDescription msg;
    msg << "World volume of box shape not found." << G4endl;
    msg << "Perhaps you have changed geometry." << G4endl;
    msg << "The gun will be place in the center.";
    G4Exception("B4PrimaryGeneratorAction::GeneratePrimaries()",
      "MyCode0002", JustWarning, msg);
  }

  G4double Theta = CLHEP::RandFlat::shoot( -180.*degree, 180.*degree);
  G4double Phi   = CLHEP::RandFlat::shoot( -90.*degree, 90.*degree);

  G4double px = sin(Theta)*cos(Phi);
  G4double py = sin(Theta)*sin(Phi);
  G4double pz = cos(Theta);

  auto particleDefinition = G4ParticleTable::GetParticleTable()->FindParticle("gamma");
  fParticleGun->SetParticleDefinition(particleDefinition);
  G4double gammaEnergy = CLHEP::RandFlat::shoot( 1.*MeV, 3.*MeV );

  G4double x=100.*cm;
  G4double y=100.*cm;
  G4double z=100.*cm;
  G4double random1 = CLHEP::RandFlat::shoot( -50.*cm, 50.*cm);
  G4double random2 = CLHEP::RandFlat::shoot( -50.*cm, 50.*cm);
  //1面
  fParticleGun->SetParticleEnergy(gammaEnergy);
  fParticleGun->SetParticleMomentumDirection(G4ThreeVector( px, py, pz));
  fParticleGun->SetParticlePosition(G4ThreeVector( x, random1, random2));
  fParticleGun->GeneratePrimaryVertex(anEvent);
  //1面
  fParticleGun->SetParticleEnergy(gammaEnergy);
  fParticleGun->SetParticleMomentumDirection(G4ThreeVector( px, py, pz));
  fParticleGun->SetParticlePosition(G4ThreeVector( -x, rondom1, random2));
  fParticleGun->GeneratePrimaryVertex(anEvent);
  //1面
  fParticleGun->SetParticleEnergy(gammaEnergy);
  fParticleGun->SetParticleMomentumDirection(G4ThreeVector( px, py, pz));
  fParticleGun->SetParticlePosition(G4ThreeVector( random1, y, random2));
  fParticleGun->GeneratePrimaryVertex(anEvent);
  //1面
  fParticleGun->SetParticleEnergy(gammaEnergy);
  fParticleGun->SetParticleMomentumDirection(G4ThreeVector( px, py, pz));
  fParticleGun->SetParticlePosition(G4ThreeVector( random1, -y, random2));
  fParticleGun->GeneratePrimaryVertex(anEvent);
  //1面
  fParticleGun->SetParticleEnergy(gammaEnergy);
  fParticleGun->SetParticleMomentumDirection(G4ThreeVector( px, py, pz));
  fParticleGun->SetParticlePosition(G4ThreeVector( random1, random2, z));
  fParticleGun->GeneratePrimaryVertex(anEvent);
  //1面
  fParticleGun->SetParticleEnergy(gammaEnergy);
  fParticleGun->SetParticleMomentumDirection(G4ThreeVector( px, py, pz));
  fParticleGun->SetParticlePosition(G4ThreeVector( random1, random2, -z));
  fParticleGun->GeneratePrimaryVertex(anEvent);

  
}

